[{"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\index.js":"1","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\App.js":"2","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Products.js":"3","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Product.js":"4","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Navbar.js":"5","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Cart\\Cart.js":"6","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.js":"7","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.js":"8","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.js":"9","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput.js":"10","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Review.js":"11","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput1.js":"12","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\api\\geocoding.js":"13","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Modal.js":"14"},{"size":239,"mtime":1611837118217,"results":"15","hashOfConfig":"16"},{"size":2163,"mtime":1614494624379,"results":"17","hashOfConfig":"16"},{"size":1979,"mtime":1614495231719,"results":"18","hashOfConfig":"16"},{"size":1806,"mtime":1614496282207,"results":"19","hashOfConfig":"16"},{"size":610,"mtime":1613394621698,"results":"20","hashOfConfig":"16"},{"size":2803,"mtime":1613447408149,"results":"21","hashOfConfig":"16"},{"size":2094,"mtime":1613918377146,"results":"22","hashOfConfig":"16"},{"size":9671,"mtime":1614401946491,"results":"23","hashOfConfig":"16"},{"size":1879,"mtime":1613964621042,"results":"24","hashOfConfig":"16"},{"size":380,"mtime":1614223384673,"results":"25","hashOfConfig":"16"},{"size":153,"mtime":1613901537491,"results":"26","hashOfConfig":"16"},{"size":810,"mtime":1614235971800,"results":"27","hashOfConfig":"16"},{"size":205,"mtime":1614240026815,"results":"28","hashOfConfig":"16"},{"size":2060,"mtime":1614495461955,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"kl3aup",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\index.js",["66"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nconst index = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n",["67","68"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\App.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Products.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Product.js",["69","70"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Navbar.js",["71","72"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst Navbar = ({itemCount}) => {\r\n    return (\r\n        <div className=\"ui huge menu\">\r\n            <Link to=\"/\">\r\n                <a className=\" header item\">E-CommApp</a>\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/cart\">\r\n                    <a className=\"item\">\r\n                        MyCart({itemCount}) &nbsp;\r\n                        <i className=\"cart icon\"></i>\r\n                    </a>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Cart\\Cart.js",["73","74"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './Cart.css'\r\nconst Cart = ({cart,changeItemCount}) => {\r\n    /* function increaseCount(item){\r\n      setCart(cart=>{\r\n        return( [...cart,item] )\r\n    })\r\n    } */\r\n    let totalPrice=0,itemCount=0;\r\n    const deliveryCharges=5;\r\n    const renderedItems=cart.map(item=>{\r\n      totalPrice+=item.price*item.count;\r\n      itemCount+=item.count;\r\n      return(\r\n        <div className=\" item\" key={item.id}>\r\n            <div className=\"ui tiny image\" style={{border:\"0px solid black\"}}>\r\n              <img src={item.imageURL} />\r\n              <br></br>\r\n              <div className=\"quantity-change\">\r\n                <i className={`icon  large minus circle ${item.count<=1?'disabled':''}`} \r\n                onClick={()=>{\r\n                  if(item.count>1)\r\n                    changeItemCount(item.id,item.count-1)\r\n                }}></i>\r\n                <div className=\"square\">{item.count}</div>\r\n                <i className=\"icon large plus circle\" \r\n                onClick={()=>changeItemCount(item.id,item.count+1)}></i>\r\n              </div>\r\n            </div>\r\n            <div className=\"content\">\r\n              <a className=\"header\">{item.name}</a>\r\n              <div className=\"meta\">\r\n                <span className=\"cinema\">{item.description}</span>\r\n              </div>\r\n              <p className=\"header\">${item.price*item.count}</p>\r\n              <div className=\"extra\">\r\n                \r\n              <button className=\"ui tiny negative basic button\"\r\n              onClick={()=>changeItemCount(item.id,0)}\r\n              >Remove item</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      )\r\n    })\r\n    return (\r\n      <div className=\"ui grid container\">\r\n        <div className=\"ten wide column\">\r\n          <div className=\"ui divided scroll items\">\r\n            In cart- {renderedItems.length}\r\n            {renderedItems}\r\n          </div>\r\n        </div>\r\n        <div className=\"four wide column\">\r\n          {/* <div class=\"ui  header\">Price details</div>\r\n          <div class=\"ui divider\"></div> */}\r\n          <h4 className=\"ui horizontal divider header\">\r\n            <i className=\"tags icon\"></i>\r\n            Price details\r\n          </h4>\r\n          <p>Total({itemCount} Item{itemCount>1?'s':''}) :&nbsp; {totalPrice}</p>\r\n          <p>Delivery Charges: {totalPrice>500?'FREE':`$${deliveryCharges}`}</p>\r\n          <div className=\"ui  divider \"></div>\r\n          <p className=\"ui header\">Total Amount: ${totalPrice>500?totalPrice:totalPrice+deliveryCharges}</p>\r\n          <Link to=\"/checkout\">\r\n            <button className=\"fluid ui button\">Place order</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.js",["75"],"import React , {Fragment, useState} from 'react'\r\nimport AddressForm from '../AddressForm'\r\nimport PaymentForm from '../PaymentForm'\r\n\r\nconst Checkout = ({cart}) => {\r\n    const [activeStep, setActiveStep]=useState(0);\r\n    const [shippingData, setShippingData]=useState({});\r\n    \r\n    //console.log(shippingData);\r\n    const nextStep=()=>{\r\n        setActiveStep(prevActiveStep=>prevActiveStep+1);\r\n    }\r\n    const prevStep=()=>{\r\n        setActiveStep(prevActiveStep=>prevActiveStep-1);\r\n    }\r\n    const next=(data)=>{\r\n        setShippingData(data);\r\n        //console.log(data.name); wont give correct state immediately after setting the state!\r\n        nextStep();\r\n    }\r\n\r\n    const Form=()=>{\r\n        \r\n            return(activeStep===0?<AddressForm next={next}/>:<PaymentForm prevStep={prevStep} cart={cart} shippingData={shippingData}/>);\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"ui hidden section divider\"></div>\r\n            <div className=\"ui one column centered page grid\" style={{border:\"1px solid black\"}}>\r\n                <div className=\"column nine wide\" style={{backgroundColor:\"white\"}}>\r\n                    <div className=\"ui center aligned header\">Checkout</div>\r\n                    <div class=\"ui two steps mini\">\r\n                        <div class={activeStep===0?'active step':'step'} >\r\n                            <i class=\"shipping fast icon\"></i>\r\n\r\n                            <div class=\"content\">\r\n                                <div class=\"title\">Shipping address</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class={activeStep===1?'active step':'step'}>\r\n                            <i class=\"payment icon\"></i>\r\n                            <div class=\"content\">\r\n                            <div class=\"title\">Payment details</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {<Form />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.js",["76"],"import React,{useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\n\r\nimport {FormInput} from './FormInput'\r\nimport {FormInput1} from './FormInput1'\r\nimport geocoding from './api/geocoding'\r\n\r\nconst AddressForm = ({next}) => {\r\n    const [state,setState]= useState('');\r\n    const [region,setRegion]=useState('');\r\n\r\n\r\n    const { register, errors, handleSubmit, setValue } = useForm({\r\n        mode:'onBlur'\r\n    });\r\n    const onSubmit = data => {\r\n        //console.log(data);\r\n        next({...data});\r\n    }\r\n    //console.log('error pin ',errors.pin);\r\n    const search=async (term)=>{\r\n        try{\r\n            //console.log(term);\r\n            const response=await axios.get(`https://api.postalpincode.in/pincode/${term}`);\r\n            console.log(response);\r\n            if(response.data[0].Status===\"Error\"){\r\n                setState('');\r\n                setRegion('No location found');\r\n                \r\n            }\r\n            else{\r\n                setState(response.data[0].PostOffice[0].State);\r\n                setRegion(response.data[0].PostOffice[0].District);\r\n                \r\n            }\r\n\r\n        }\r\n        catch(e){\r\n            //console.log(e);\r\n            setState('');\r\n            setRegion('No location found');\r\n        }\r\n    }\r\n    const handlePinChange=(e)=>{\r\n        if(e.target.value.length===6){\r\n            search(e.target.value);\r\n        }\r\n        else{\r\n            setState('');\r\n            setRegion('');\r\n        }\r\n    }\r\n    const validatePin=()=>{\r\n        if(region==='No location found'){\r\n            //console.log('no loc found');\r\n            return 'PIN not found'\r\n        }\r\n        return true;\r\n    }\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0\r\n      };\r\n    const getLocation=async (lat,long)=>{\r\n        try{\r\n            //const response=await geocoding.get(`?latlng=${lat},${long}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\r\n            //const response= await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\r\n            \r\n            //FIXING CORS ERROR- https://medium.com/@dtkatz/3-ways-to-fix-the-cors-error-and-how-access-control-allow-origin-works-d97d55946d9\r\n            const response= await axios.get(`https://apis.mapmyindia.com/advancedmaps/v1/${process.env.REACT_APP_MYMAPINDIA_KEY}/rev_geocode?lat=${lat}&lng=${long}`);\r\n            if(response.data.responseCode===200){\r\n                setValue('pincode',response.data.results[0].pincode);\r\n                setValue('locality',`${response.data.results[0].city} ${response.data.results[0].state}`);\r\n                setValue('address',response.data.results[0].formatted_address);\r\n            }\r\n            console.log(response);\r\n        }\r\n        catch(e){\r\n            console.log(`[ERROR]`+e);\r\n        }\r\n        \r\n    } \r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n        \r\n        console.log('Your current position is:');\r\n        console.log(`Latitude : ${crd.latitude}`);\r\n        console.log(`Longitude: ${crd.longitude}`);\r\n        console.log(`More or less ${crd.accuracy} meters.`);\r\n        //NOW WE GOT LAT AND LONG. NOW USE REVERSE GEOCODING TO GET ADDRESS DETAILS\r\n        getLocation(crd.latitude,crd.longitude); \r\n\r\n    }\r\n    \r\n    function error(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n    const setLocation=()=>{\r\n        setValue('pincode','101');\r\n        setValue('locality','fck');\r\n        setValue('address','stockton');\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n    }\r\n    return (\r\n        <div className=\"ui form\">\r\n            <h4 className=\"ui dividing header\">Shipping Information</h4>\r\n            <div className=\" fields\">\r\n                {/* <div className=\"ten wide required field\">\r\n                     <FormInput \r\n                        type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                        label='Name'\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[a-zA-Z ]+$/,\r\n                                message:\"Enter valid name\"\r\n                            },\r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.name}\r\n                        \r\n                    />\r\n                    \r\n                </div> */}\r\n                <FormInput1 \r\n                        width=\"ten wide\" required={1} type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                        label='Name'\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[a-zA-Z ]+$/,\r\n                                message:\"Enter valid name\"\r\n                            },\r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.name}\r\n                        \r\n                    />\r\n                {/* <div className=\"five wide required field\">\r\n                    \r\n                    <FormInput \r\n                        type=\"text\" name=\"phone\" placeholder=\"10-digit mobile number\"\r\n                        label=\"Phone No.\"\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{1}$/,\r\n                                message:\"Enter valid number\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.phone}\r\n                    />\r\n                </div> */}\r\n                <FormInput1 \r\n                        width=\"five wide\" required={1} type=\"text\" name=\"phone\" placeholder=\"10-digit mobile number\"\r\n                        label=\"Phone No.\"\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{1}$/,\r\n                                message:\"Enter valid number\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.phone}\r\n                    />\r\n            </div>\r\n            <div className=\"field\">\r\n                <button class=\"ui primary button\" onClick={setLocation}>\r\n                    <i class=\"map marker alternate icon\"></i>\r\n                    Get current location\r\n                </button>\r\n            </div>\r\n            <div className=\"fields\">\r\n                {/* <div className=\"four wide required field\">\r\n                    \r\n                    <FormInput \r\n                        type=\"text\" name=\"pincode\" placeholder=\"\"\r\n                        label=\"Pincode\" onChange={handlePinChange}\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{6}$/,\r\n                                message:\"Enter valid pin\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.pincode}\r\n                    />\r\n                    \r\n                </div> */}\r\n                <FormInput1\r\n                        width=\"four wide\" required={1}  type=\"text\" name=\"pincode\" placeholder=\"\"\r\n                        label=\"Pincode\" onChange={handlePinChange}\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{6}$/,\r\n                                message:\"Enter valid pin\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            },\r\n                            validate:validatePin\r\n                        })}\r\n                        error={errors.pincode}\r\n                    />\r\n                <div className=\"ten wide field\">\r\n                   \r\n                    <FormInput \r\n                        type=\"text\" name=\"locality\" placeholder=\"lokation\"\r\n                        label=\"Locality\" readOnly value={`${region} ${state}`}\r\n                        register={register}\r\n                        error={errors.locality}\r\n                    />\r\n                   \r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n            \r\n                <label>Address</label>\r\n                <textarea rows=\"3\" name=\"address\" placeholder=\"Address(Area and street)\" ref={register}></textarea>\r\n                \r\n            </div>\r\n            <div class=\"ui fluid secondary submit button\" onClick={handleSubmit(onSubmit)}>Submit</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.js",["77"],"import React from 'react'\r\nimport {Elements, ElementsConsumer,CardElement} from '@stripe/react-stripe-js';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport Review from './Review'\r\n\r\nconst stripePromise=loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\nconst PaymentForm = ({shippingData ,cart,prevStep}) => {\r\n    console.log(cart);\r\n    console.log(shippingData);\r\n    const handleSubmit=async (event,elements, stripe)=>{\r\n        event.preventDefault();\r\n        console.log('form submitted');\r\n        if(!stripe || !elements){\r\n            return;\r\n        }\r\n        const cardElement = elements.getElement(CardElement);\r\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n            type: 'card',\r\n            card: cardElement,\r\n          });\r\n\r\n        \r\n        if (error) {\r\n        console.log('[error]', error);\r\n        } else {\r\n        console.log('[PaymentMethod]', paymentMethod);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>\r\n                    {\r\n                        ({elements,stripe})=>(\r\n                            <form onSubmit={ (e)=> handleSubmit(e,elements,stripe) }>\r\n                                <CardElement />\r\n                                <br></br>\r\n                                <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                                    <button className=\"ui secondary basic button\" onClick={prevStep}>Back</button>\r\n                                    <button className={`ui primary ${!stripe?'disabled':''} button`}>Pay</button>\r\n                                </div>\r\n                            </form>\r\n                        )\r\n                    }\r\n                </ElementsConsumer>\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Review.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput1.js",["78"],"import React from 'react'\r\nimport {useForm} from 'react-hook-form'\r\n\r\nexport const FormInput1 = ({width,required,name,label,register,error,...inputProps}) => {\r\n    //const {register,errors}=useForm();\r\n    \r\n    /* const error=errors.name;\r\n    console.log(error); */\r\n    //console.log(error);\r\n    //const reg=register(registerobj);\r\n    return (\r\n        <>\r\n            <div className={`${width} ${required===1?'required':''} ${error?'error':''} field `}>\r\n                <label>{label}</label>\r\n                <input  \r\n                ref={register}\r\n                name={name}\r\n                {...inputProps}\r\n                \r\n                >\r\n                </input>\r\n                <span style={{color:'#a73a3d'}}>{error && error.message }</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\api\\geocoding.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Modal.js",["79"],{"ruleId":"80","severity":1,"message":"81","line":4,"column":7,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":1,"column":15,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":8,"column":21,"nodeType":"91","endLine":8,"endColumn":76},{"ruleId":"92","severity":1,"message":"93","line":7,"column":17,"nodeType":"91","endLine":7,"endColumn":45},{"ruleId":"92","severity":1,"message":"93","line":11,"column":21,"nodeType":"91","endLine":11,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":19,"column":15,"nodeType":"91","endLine":19,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":33,"column":15,"nodeType":"91","endLine":33,"endColumn":37},{"ruleId":"80","severity":1,"message":"94","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"95","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":17},{"ruleId":"80","severity":1,"message":"96","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":2,"column":9,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":15,"column":21,"nodeType":"91","endLine":15,"endColumn":57},"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","'geocoding' is defined but never used.","'Review' is defined but never used.","'useForm' is defined but never used.","no-global-assign","no-unsafe-negation"]