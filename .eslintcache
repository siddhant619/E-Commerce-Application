[{"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\index.js":"1","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\App.js":"2","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Products.js":"3","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Product.js":"4","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Navbar.js":"5","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Cart\\Cart.js":"6","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.js":"7","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.js":"8","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.js":"9","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput.js":"10","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Review.js":"11","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput1.js":"12","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\api\\geocoding.js":"13","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Modal.js":"14","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\contexts\\CartContext.js":"15"},{"size":239,"mtime":1611837118217,"results":"16","hashOfConfig":"17"},{"size":2234,"mtime":1615006016812,"results":"18","hashOfConfig":"17"},{"size":2099,"mtime":1615004294052,"results":"19","hashOfConfig":"17"},{"size":1928,"mtime":1615005714480,"results":"20","hashOfConfig":"17"},{"size":763,"mtime":1615003981790,"results":"21","hashOfConfig":"17"},{"size":2933,"mtime":1615005936185,"results":"22","hashOfConfig":"17"},{"size":2077,"mtime":1615006039437,"results":"23","hashOfConfig":"17"},{"size":9671,"mtime":1614401946491,"results":"24","hashOfConfig":"17"},{"size":2044,"mtime":1615006172226,"results":"25","hashOfConfig":"17"},{"size":380,"mtime":1614223384673,"results":"26","hashOfConfig":"17"},{"size":153,"mtime":1613901537491,"results":"27","hashOfConfig":"17"},{"size":810,"mtime":1614235971800,"results":"28","hashOfConfig":"17"},{"size":205,"mtime":1614240026815,"results":"29","hashOfConfig":"17"},{"size":2225,"mtime":1615005794466,"results":"30","hashOfConfig":"17"},{"size":1367,"mtime":1615004046183,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"kl3aup",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\index.js",["66"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nconst index = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n",["67","68"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\App.js",["69","70"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Products.js",["71","72","73"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Product.js",["74","75","76","77","78"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Navbar.js",["79","80","81","82","83"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Cart\\Cart.js",["84","85","86","87"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Checkout\\Checkout.js",["88"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\AddressForm.js",["89"],"import React,{useState} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\n\r\nimport {FormInput} from './FormInput'\r\nimport {FormInput1} from './FormInput1'\r\nimport geocoding from './api/geocoding'\r\n\r\nconst AddressForm = ({next}) => {\r\n    const [state,setState]= useState('');\r\n    const [region,setRegion]=useState('');\r\n\r\n\r\n    const { register, errors, handleSubmit, setValue } = useForm({\r\n        mode:'onBlur'\r\n    });\r\n    const onSubmit = data => {\r\n        //console.log(data);\r\n        next({...data});\r\n    }\r\n    //console.log('error pin ',errors.pin);\r\n    const search=async (term)=>{\r\n        try{\r\n            //console.log(term);\r\n            const response=await axios.get(`https://api.postalpincode.in/pincode/${term}`);\r\n            console.log(response);\r\n            if(response.data[0].Status===\"Error\"){\r\n                setState('');\r\n                setRegion('No location found');\r\n                \r\n            }\r\n            else{\r\n                setState(response.data[0].PostOffice[0].State);\r\n                setRegion(response.data[0].PostOffice[0].District);\r\n                \r\n            }\r\n\r\n        }\r\n        catch(e){\r\n            //console.log(e);\r\n            setState('');\r\n            setRegion('No location found');\r\n        }\r\n    }\r\n    const handlePinChange=(e)=>{\r\n        if(e.target.value.length===6){\r\n            search(e.target.value);\r\n        }\r\n        else{\r\n            setState('');\r\n            setRegion('');\r\n        }\r\n    }\r\n    const validatePin=()=>{\r\n        if(region==='No location found'){\r\n            //console.log('no loc found');\r\n            return 'PIN not found'\r\n        }\r\n        return true;\r\n    }\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0\r\n      };\r\n    const getLocation=async (lat,long)=>{\r\n        try{\r\n            //const response=await geocoding.get(`?latlng=${lat},${long}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\r\n            //const response= await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${process.env.REACT_APP_GOOGLE_API_KEY}`);\r\n            \r\n            //FIXING CORS ERROR- https://medium.com/@dtkatz/3-ways-to-fix-the-cors-error-and-how-access-control-allow-origin-works-d97d55946d9\r\n            const response= await axios.get(`https://apis.mapmyindia.com/advancedmaps/v1/${process.env.REACT_APP_MYMAPINDIA_KEY}/rev_geocode?lat=${lat}&lng=${long}`);\r\n            if(response.data.responseCode===200){\r\n                setValue('pincode',response.data.results[0].pincode);\r\n                setValue('locality',`${response.data.results[0].city} ${response.data.results[0].state}`);\r\n                setValue('address',response.data.results[0].formatted_address);\r\n            }\r\n            console.log(response);\r\n        }\r\n        catch(e){\r\n            console.log(`[ERROR]`+e);\r\n        }\r\n        \r\n    } \r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n        \r\n        console.log('Your current position is:');\r\n        console.log(`Latitude : ${crd.latitude}`);\r\n        console.log(`Longitude: ${crd.longitude}`);\r\n        console.log(`More or less ${crd.accuracy} meters.`);\r\n        //NOW WE GOT LAT AND LONG. NOW USE REVERSE GEOCODING TO GET ADDRESS DETAILS\r\n        getLocation(crd.latitude,crd.longitude); \r\n\r\n    }\r\n    \r\n    function error(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n    const setLocation=()=>{\r\n        setValue('pincode','101');\r\n        setValue('locality','fck');\r\n        setValue('address','stockton');\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n    }\r\n    return (\r\n        <div className=\"ui form\">\r\n            <h4 className=\"ui dividing header\">Shipping Information</h4>\r\n            <div className=\" fields\">\r\n                {/* <div className=\"ten wide required field\">\r\n                     <FormInput \r\n                        type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                        label='Name'\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[a-zA-Z ]+$/,\r\n                                message:\"Enter valid name\"\r\n                            },\r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.name}\r\n                        \r\n                    />\r\n                    \r\n                </div> */}\r\n                <FormInput1 \r\n                        width=\"ten wide\" required={1} type=\"text\" name=\"name\" placeholder=\"Enter Name\"\r\n                        label='Name'\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[a-zA-Z ]+$/,\r\n                                message:\"Enter valid name\"\r\n                            },\r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.name}\r\n                        \r\n                    />\r\n                {/* <div className=\"five wide required field\">\r\n                    \r\n                    <FormInput \r\n                        type=\"text\" name=\"phone\" placeholder=\"10-digit mobile number\"\r\n                        label=\"Phone No.\"\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{1}$/,\r\n                                message:\"Enter valid number\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.phone}\r\n                    />\r\n                </div> */}\r\n                <FormInput1 \r\n                        width=\"five wide\" required={1} type=\"text\" name=\"phone\" placeholder=\"10-digit mobile number\"\r\n                        label=\"Phone No.\"\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{1}$/,\r\n                                message:\"Enter valid number\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.phone}\r\n                    />\r\n            </div>\r\n            <div className=\"field\">\r\n                <button class=\"ui primary button\" onClick={setLocation}>\r\n                    <i class=\"map marker alternate icon\"></i>\r\n                    Get current location\r\n                </button>\r\n            </div>\r\n            <div className=\"fields\">\r\n                {/* <div className=\"four wide required field\">\r\n                    \r\n                    <FormInput \r\n                        type=\"text\" name=\"pincode\" placeholder=\"\"\r\n                        label=\"Pincode\" onChange={handlePinChange}\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{6}$/,\r\n                                message:\"Enter valid pin\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            }\r\n                        })}\r\n                        error={errors.pincode}\r\n                    />\r\n                    \r\n                </div> */}\r\n                <FormInput1\r\n                        width=\"four wide\" required={1}  type=\"text\" name=\"pincode\" placeholder=\"\"\r\n                        label=\"Pincode\" onChange={handlePinChange}\r\n                        register={register({\r\n                            pattern:{\r\n                                value:/^[0-9]{6}$/,\r\n                                message:\"Enter valid pin\"\r\n                            },\r\n                            \r\n                            required:{\r\n                                value:true,\r\n                                message:\"Required!\"\r\n                            },\r\n                            validate:validatePin\r\n                        })}\r\n                        error={errors.pincode}\r\n                    />\r\n                <div className=\"ten wide field\">\r\n                   \r\n                    <FormInput \r\n                        type=\"text\" name=\"locality\" placeholder=\"lokation\"\r\n                        label=\"Locality\" readOnly value={`${region} ${state}`}\r\n                        register={register}\r\n                        error={errors.locality}\r\n                    />\r\n                   \r\n                </div>\r\n            </div>\r\n            <div className=\"field\">\r\n            \r\n                <label>Address</label>\r\n                <textarea rows=\"3\" name=\"address\" placeholder=\"Address(Area and street)\" ref={register}></textarea>\r\n                \r\n            </div>\r\n            <div class=\"ui fluid secondary submit button\" onClick={handleSubmit(onSubmit)}>Submit</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\PaymentForm.js",["90","91","92","93"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\Review.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\FormInput1.js",["94"],"import React from 'react'\r\nimport {useForm} from 'react-hook-form'\r\n\r\nexport const FormInput1 = ({width,required,name,label,register,error,...inputProps}) => {\r\n    //const {register,errors}=useForm();\r\n    \r\n    /* const error=errors.name;\r\n    console.log(error); */\r\n    //console.log(error);\r\n    //const reg=register(registerobj);\r\n    return (\r\n        <>\r\n            <div className={`${width} ${required===1?'required':''} ${error?'error':''} field `}>\r\n                <label>{label}</label>\r\n                <input  \r\n                ref={register}\r\n                name={name}\r\n                {...inputProps}\r\n                \r\n                >\r\n                </input>\r\n                <span style={{color:'#a73a3d'}}>{error && error.message }</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\CheckoutForm\\api\\geocoding.js",[],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\Components\\Modal.js",["95","96","97","98"],"C:\\Users\\siddh\\Desktop\\CB\\React.js\\e-commerce\\src\\contexts\\CartContext.js",[],{"ruleId":"99","severity":1,"message":"100","line":4,"column":7,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"108","line":1,"column":24,"nodeType":"101","messageId":"102","endLine":1,"endColumn":33},{"ruleId":"99","severity":1,"message":"109","line":52,"column":17,"nodeType":"101","messageId":"102","endLine":52,"endColumn":24},{"ruleId":"99","severity":1,"message":"110","line":52,"column":25,"nodeType":"101","messageId":"102","endLine":52,"endColumn":40},{"ruleId":"99","severity":1,"message":"111","line":52,"column":41,"nodeType":"101","messageId":"102","endLine":52,"endColumn":54},{"ruleId":"99","severity":1,"message":"107","line":1,"column":15,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},{"ruleId":"99","severity":1,"message":"112","line":7,"column":12,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":7,"column":25,"nodeType":"101","messageId":"102","endLine":7,"endColumn":40},{"ruleId":"99","severity":1,"message":"111","line":7,"column":41,"nodeType":"101","messageId":"102","endLine":7,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":11,"column":21,"nodeType":"115","endLine":11,"endColumn":76},{"ruleId":"99","severity":1,"message":"112","line":5,"column":12,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"109","line":5,"column":17,"nodeType":"101","messageId":"102","endLine":5,"endColumn":24},{"ruleId":"99","severity":1,"message":"110","line":5,"column":25,"nodeType":"101","messageId":"102","endLine":5,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":9,"column":17,"nodeType":"115","endLine":9,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":13,"column":21,"nodeType":"115","endLine":13,"endColumn":41},{"ruleId":"99","severity":1,"message":"109","line":12,"column":17,"nodeType":"101","messageId":"102","endLine":12,"endColumn":24},{"ruleId":"99","severity":1,"message":"111","line":12,"column":41,"nodeType":"101","messageId":"102","endLine":12,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":22,"column":15,"nodeType":"115","endLine":22,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":36,"column":15,"nodeType":"115","endLine":36,"endColumn":37},{"ruleId":"99","severity":1,"message":"118","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"119","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"99","severity":1,"message":"120","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"109","line":9,"column":17,"nodeType":"101","messageId":"102","endLine":9,"endColumn":24},{"ruleId":"99","severity":1,"message":"110","line":9,"column":25,"nodeType":"101","messageId":"102","endLine":9,"endColumn":40},{"ruleId":"99","severity":1,"message":"111","line":9,"column":41,"nodeType":"101","messageId":"102","endLine":9,"endColumn":54},{"ruleId":"99","severity":1,"message":"121","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":6,"column":12,"nodeType":"101","messageId":"102","endLine":6,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":6,"column":25,"nodeType":"101","messageId":"102","endLine":6,"endColumn":40},{"ruleId":"99","severity":1,"message":"111","line":6,"column":41,"nodeType":"101","messageId":"102","endLine":6,"endColumn":54},{"ruleId":"113","severity":1,"message":"114","line":16,"column":21,"nodeType":"115","endLine":16,"endColumn":57},"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'setCart' is assigned a value but never used.","'changeItemCount' is assigned a value but never used.","'getTotalItems' is assigned a value but never used.","'cart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","'geocoding' is defined but never used.","'Review' is defined but never used.","'useForm' is defined but never used.","no-global-assign","no-unsafe-negation"]